// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(cuid())
  name      String
  email     String     @unique
  password  String
  proposals Proposal[]
  leads     Lead[]
  role      String     @default("user")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Proposal {
  id              String   @id @default(cuid())
  userId          String
  user            User     @relation(fields: [userId], references: [id])
  systemSize      Float
  numberOfPanels  Int
  totalPrice      Float
  monthlyBill     Float
  address         String
  packageType     String
  includeBattery  Boolean  @default(false)
  batteryCount    Int      @default(0)
  batteryType     String?
  warrantyPackage String   @default("standard")
  paymentType     String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([userId])
}

// CRM Models
model Lead {
  id           String        @id @default(cuid())
  firstName    String
  lastName     String
  email        String?
  phone        String?
  address      String?
  source       String?       // Where the lead came from (website, referral, etc.)
  status       String        // New, Contacted, Qualified, Proposal, Won, Lost
  assignedTo   String?       // User ID of the sales rep
  user         User?         @relation(fields: [assignedTo], references: [id])
  notes        LeadNote[]
  interactions Interaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@index([assignedTo])
}

model LeadNote {
  id        String   @id @default(cuid())
  content   String
  leadId    String
  lead      Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  createdBy String   // User ID who created the note
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([leadId])
}

model Interaction {
  id          String   @id @default(cuid())
  type        String   // Call, Email, Meeting, etc.
  description String
  leadId      String
  lead        Lead     @relation(fields: [leadId], references: [id], onDelete: Cascade)
  createdBy   String   // User ID who recorded the interaction
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([leadId])
} 